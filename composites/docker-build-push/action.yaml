name: Build and Push Docker Image
description: Build and (optionally) push Docker images
author: Synthetik Technologies
inputs:
  image:
    description: The image base name
    required: true
  image-registry:
    description: The targeted image registry
    required: false
    default: ""
  platforms:
    description: Platforms/architectures to build for. Defaults to AMD64
    required: false
    default: "linux/amd64"
  push:
    description: Whether to push the image to the registry
    required: false
    default: "true"
  ssh-key-needed:
    description: Whether an SSH key is needed to pull repositories
    required: false
    default: "false"
  version:
    description: The version tag
    required: false
    default: "latest"
outputs:
  image-name:
    description: The full image name, including repository and version
    value: ${{ steps.build-image-name.outputs.image-name }}

runs:
  using: composite
  steps:
    - name: Name Image
      id: name-image
      shell: "bash"
      run: |
        if [ -z "${{ inputs.image-registry }}" ]; then
          echo "::set-output name=image-name::$(echo ${{ inputs.image }}:${{ inputs.version }})"
        else
          echo "::set-output name=image-name::$(echo ${{ inputs.image-registry }}/${{ inputs.image }}:${{ inputs.version }})"
        fi
    - name: Setup Qemu
      uses: docker/setup-qemu-action@v2
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1
    - name: Build and Push with SSH
      uses: docker/build-push-action@v2
      if: inputs.ssh-key-needed == 'true'
      with:
        ssh: default=${{ env.SSH_AUTH_SOCK }}
        push: ${{ inputs.push }}
        tags: ${{ steps.name-image.outputs.image-name }}
        platforms: ${{ inputs.platforms }}
        cache-from: type=gha
        cache-to: type=gha, mode=max
    - name: Build and Push No SSH
      uses: docker/build-push-action@v2
      if: inputs.ssh-key-needed == 'false'
      with:
        push: ${{ inputs.push }}
        tags: ${{ steps.name-image.outputs.image-name }}
        platforms: ${{ inputs.platforms }}
        cache-from: type=gha
        cache-to: type=gha, mode=max

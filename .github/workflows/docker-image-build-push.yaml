name: Docker Image Build

on:
  workflow_call:
    inputs:
      image-name:
        required: true
        type: string
      is-release:
        required: true
        type: string
      version:
        required: true
        type: string
    secrets:
      DEV_CONTAINER_REGISTRY_PASSWORD:
        required: true
      PROD_CONTAINER_REGISTRY_PASSWORD:
        required: true
      DEPLOY_TOKEN_COURIER:
        required: true


jobs:
  docker-build:
    runs-on: self-hosted
    steps:
      - name: Get docker image name
        run: |
          vers=${{ inputs.version }}
          if [ ${{inputs.is-release}} == true ]
          then
            registry=synthetik.azurecr.io
          else
            registry=synthetikdev.azurecr.io
          fi
          image=$registry/${{inputs.image-name}}:$vers
          echo "IMAGE=$image" >> $GITHUB_ENV
      - uses: actions/checkout@v3
      - name: Add SSH deployment key
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.DEPLOY_TOKEN_COURIER }}
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      - name: Log into develop container registry
        uses: docker/login-action@v1
        with:
          registry: synthetikdev.azurecr.io
          username: synthetikDev
          password: ${{ secrets.DEV_CONTAINER_REGISTRY_PASSWORD }}
      - name: Log into production container registry
        uses: docker/login-action@v1
        with:
          registry: synthetik.azurecr.io
          username: synthetik
          password: ${{ secrets.PROD_CONTAINER_REGISTRY_PASSWORD }}
      - name: Build and push image
        uses: docker/build-push-action@v2
        with:
          ssh: default=${{ env.SSH_AUTH_SOCK }} 
          context: .
          push: true
          tags: ${{ env.IMAGE }}
          cache-from: type=gha
          cache-to: type=gha, mode=max
      - name: Create artifact
        run: |
          IMAGE=${{ env.IMAGE }}
          echo $IMAGE > image-name.txt
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: IMAGE
          path: image-name.txt